@using JamZoo.Project.WebSite.Enums;
@using JamZoo.Project.WebSite.Library;
@using System.Web.Script.Serialization;
@model JamZoo.Project.WebSite.Models.ChildModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string CurrentController = string.Empty;
    if (ViewContext.RouteData.Values["Controller"] != null)
    {
        CurrentController = ViewContext.RouteData.Values["Controller"].ToString();
    }
}
@Html.ActionLink("回上頁", "List", new { page = Model.page }, new { @class = "pure-button" })
<p>
@Html.ValidationMessage("message")
</p>

@using (Html.BeginForm(Model.Mode == EditPageMode.Create ? "create" : "update", 
    CurrentController, new { page = Model.page }, FormMethod.Post,
    new { enctype = "multipart/form-data", @class = "pure-form pure-form-aligned" }))
{
	<fieldset>	

			@Html.HiddenFor(p => p.Id)

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Industryid)
			@Html.TextBoxFor(p => p.Industryid, new { @class = "pure-input-1-3" })
			@Html.ValidationMessageFor(p => p.Industryid)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Parentid)
			@Html.TextBoxFor(p => p.Parentid, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Parentid)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Name)
			@Html.TextBoxFor(p => p.Name, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Name)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Iorder)
			@Html.TextBoxFor(p => p.Iorder, new { @class = "pure-input-1-3" })
			@Html.ValidationMessageFor(p => p.Iorder)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Industryids)
			@Html.TextBoxFor(p => p.Industryids, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Industryids)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnidall)
			@Html.TextBoxFor(p => p.Columnidall, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnidall)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnid1)
			@Html.TextBoxFor(p => p.Columnid1, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnid1)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnid2)
			@Html.TextBoxFor(p => p.Columnid2, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnid2)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnid3)
			@Html.TextBoxFor(p => p.Columnid3, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnid3)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnid4)
			@Html.TextBoxFor(p => p.Columnid4, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnid4)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnid5)
			@Html.TextBoxFor(p => p.Columnid5, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnid5)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnid6)
			@Html.TextBoxFor(p => p.Columnid6, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnid6)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnid7)
			@Html.TextBoxFor(p => p.Columnid7, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnid7)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnid8)
			@Html.TextBoxFor(p => p.Columnid8, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnid8)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnid9)
			@Html.TextBoxFor(p => p.Columnid9, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnid9)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Columnid10)
			@Html.TextBoxFor(p => p.Columnid10, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Columnid10)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Createdate)
			@Model.Createdate
			@Html.HiddenFor(p => p.Createdate)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Updatedate)
			@Html.TextBoxFor(p => p.Updatedate, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Updatedate)
		</div>



		<div class="pure-control-group">
            <label></label>
            @if (Model.Mode == EditPageMode.Create)
            {
                <input type="submit" value="新 增" class="pure-button" />
            }
            else if (Model.Mode == EditPageMode.Update)
            {
                <input type="submit" value="修 改" class="pure-button" />
            }
           
        </div>
	</fieldset>
}