@using JamZoo.Project.WebSite.Enums;
@using JamZoo.Project.WebSite.Library;
@using System.Web.Script.Serialization;
@model JamZoo.Project.WebSite.Models.PublicationModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string CurrentController = string.Empty;
    if (ViewContext.RouteData.Values["Controller"] != null)
    {
        CurrentController = ViewContext.RouteData.Values["Controller"].ToString();
    }
}
@Html.ActionLink("回上頁", "List", new { page = Model.page }, new { @class = "pure-button" })
<p>
@Html.ValidationMessage("message")
</p>

@using (Html.BeginForm(Model.Mode == EditPageMode.Create ? "create" : "update", 
    CurrentController, new { page = Model.page }, FormMethod.Post,
    new { enctype = "multipart/form-data", @class = "pure-form pure-form-aligned" }))
{
	<fieldset>	

        @Html.HiddenFor(p => p.Id)

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Title)
			@Html.TextBoxFor(p => p.Title, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Title)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Image)
            <input type="file" name="ImageFile" />
            @Html.HiddenFor(p => p.Image)
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                string url = Url.Content("~/Upload/" + Model.Image);
                <img src="@url" style="width: 100px;" />
            }
			@Html.ValidationMessageFor(p => p.Image)
		</div>

        <div class="pure-control-group">
            @Html.LabelFor(p => p.Iorder)
            @Html.TextBoxFor(p => p.Iorder, new { @class = "pure-input-1-3" })
            @Html.ValidationMessageFor(p => p.Iorder)
        </div>

        <div class="pure-control-group">
            @Html.LabelFor(p => p.Allfile)
            <input type="file" name="AllfileFile" />
            @Html.HiddenFor(p => p.Allfile)
            @if (!string.IsNullOrEmpty(Model.Allfile))
            {
                string url = Url.Content("~/Upload/" + Model.Allfile);
                <a herf="@url">下載</a>
            }
            @Html.ValidationMessageFor(p => p.Allfile)
        </div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Url)
			@Html.TextBoxFor(p => p.Url, new { @class = "pure-input-1-2" })
			@Html.ValidationMessageFor(p => p.Url)
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(p => p.Createdate)
			@Model.Createdate
			@Html.HiddenFor(p => p.Createdate)
		</div>

            @if (Model.Mode == EditPageMode.Update)
            {
		<div class="pure-control-group">
            @Html.LabelFor(p => p.Updatedate)
            @Model.Updatedate
		</div>
            }

		<div class="pure-control-group">
            <label></label>
            @if (Model.Mode == EditPageMode.Create)
            {
                <input type="submit" value="新 增" class="pure-button" />
            }
            else if (Model.Mode == EditPageMode.Update)
            {
                <input type="submit" value="修 改" class="pure-button" />
            }
           
        </div>
	</fieldset>
}